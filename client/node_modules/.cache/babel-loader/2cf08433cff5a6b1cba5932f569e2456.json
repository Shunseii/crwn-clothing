{"ast":null,"code":"import _defineProperty from \"/home/shunsei/Desktop/projects/react/clothing-site/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/shunsei/Desktop/projects/react/clothing-site/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/shunsei/Desktop/projects/react/clothing-site/src/components/sign-in/sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, TitleContainer, ButtonsContainer } from './sign-in.styles';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const email = userCredentials.email,\n          password = userCredentials.password;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(TitleContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    required: true,\n    label: \"Email\",\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    required: true,\n    label: \"Password\",\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(ButtonsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Sign In With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/shunsei/Desktop/projects/react/clothing-site/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","TitleContainer","ButtonsContainer","SignIn","useState","email","password","userCredentials","setCredentials","handleSubmit","e","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport {\n\tSignInContainer,\n\tTitleContainer,\n\tButtonsContainer\n} from './sign-in.styles';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n\tconst [userCredentials, setCredentials] = useState({email: '', password: ''});\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst { email, password } = userCredentials;\n\n\t\temailSignInStart(email, password);\n\t}\n\n\tconst handleChange = (e) => {\n\t\tconst { value, name } = e.target;\n\n\t\tsetCredentials({...userCredentials, [name]: value });\n\t}\n\n\treturn (\n\t\t<SignInContainer>\n\t\t\t<TitleContainer>I already have an account</TitleContainer>\n\t\t\t<span>Sign in with your email and password</span>\n\t\t\t\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<FormInput \n\t\t\t\t\ttype=\"email\" \n\t\t\t\t\tname=\"email\" \n\t\t\t\t\tvalue={email} \n\t\t\t\t\trequired \n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<FormInput \n\t\t\t\t\ttype=\"password\" \n\t\t\t\t\tname=\"password\" \n\t\t\t\t\tvalue={password} \n\t\t\t\t\trequired\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<ButtonsContainer>\n\t\t\t\t\t<CustomButton type=\"submit\">Sign In</CustomButton>\n\t\t\t\t\t<CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\n\t\t\t\t\t\tSign In With Google\n\t\t\t\t\t</CustomButton>\t\n\t\t\t\t</ButtonsContainer>\n\t\t\t</form>\n\t\t</SignInContainer>\n\t);\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password})) \n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}